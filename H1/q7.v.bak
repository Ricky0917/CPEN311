// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// PROGRAM		"Quartus Prime"
// VERSION		"Version 18.1.0 Build 625 09/12/2018 SJ Lite Edition"
// CREATED		"Sun May 21 15:36:34 2023"

module q7(
	asy_sig,
	outclk,
	out_sig
);


input wire	asy_sig;
input wire	outclk;
output wire	out_sig;

reg	DFF_inst3;
wire	SYNTHESIZED_WIRE_0;
wire	SYNTHESIZED_WIRE_5;
reg	DFF_inst;
reg	DFF_inst1;
wire	SYNTHESIZED_WIRE_4;
reg	DFF_inst2;

assign	out_sig = DFF_inst2;
assign	SYNTHESIZED_WIRE_0 = 1;
assign	SYNTHESIZED_WIRE_5 = 0;




always@(posedge asy_sig or negedge DFF_inst3)
begin
if (!DFF_inst3)
	begin
	DFF_inst <= 0;
	end
else
	begin
	DFF_inst <= SYNTHESIZED_WIRE_0;
	end
end


always@(posedge outclk or negedge SYNTHESIZED_WIRE_5)
begin
if (!SYNTHESIZED_WIRE_5)
	begin
	DFF_inst1 <= 0;
	end
else
	begin
	DFF_inst1 <= DFF_inst;
	end
end


always@(posedge outclk or negedge SYNTHESIZED_WIRE_5)
begin
if (!SYNTHESIZED_WIRE_5)
	begin
	DFF_inst2 <= 0;
	end
else
	begin
	DFF_inst2 <= DFF_inst1;
	end
end


always@(posedge SYNTHESIZED_WIRE_4 or negedge SYNTHESIZED_WIRE_5)
begin
if (!SYNTHESIZED_WIRE_5)
	begin
	DFF_inst3 <= 0;
	end
else
	begin
	DFF_inst3 <= DFF_inst2;
	end
end



assign	SYNTHESIZED_WIRE_4 =  ~outclk;


endmodule
